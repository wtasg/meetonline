name: Run FE / BE tests on comment (or manual)

on:
  workflow_dispatch:           # manual run
  issue_comment:
    types: [created]           # run on new comment

permissions:
  issues: write                # needed to comment back
  pull-requests: write
  contents: read

jobs:
  run-tests:
    runs-on: ubuntu-latest

    if: >
      github.event_name == 'workflow_dispatch' ||
      (github.event.issue.pull_request &&
      github.event.issue.state == 'open' &&
       (contains(github.event.comment.body, '/test_fe') ||
        contains(github.event.comment.body, '/test_be') ||
        contains(github.event.comment.body, '/test_all')))

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Comment - Tests Started
        if: ${{ github.event_name == 'issue_comment' }}
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.MEETONLINE_PAT }}
          script: |
            const { owner, repo } = context.repo;
            const issue_number = context.issue.number;
            const comment = context.payload.comment.body;
            let which = "tests";
            if (comment.includes("/test_fe")) which = "Frontend tests";
            else if (comment.includes("/test_be")) which = "Backend tests";
            else if (comment.includes("/test_all")) which = "All tests";
            await github.rest.issues.createComment({
              owner,
              repo,
              issue_number,
              body: ` ${which} started... please wait.`
            });

      - name: Determine which tests to run
        id: determine
        run: |
          COMMENT="${{ github.event.comment.body || '' }}"
          if echo "$COMMENT" | grep -q "/test_all"; then
            echo "run=all" >> "$GITHUB_OUTPUT"
          elif echo "$COMMENT" | grep -q "/test_fe"; then
            echo "run=fe" >> "$GITHUB_OUTPUT"
          elif echo "$COMMENT" | grep -q "/test_be"; then
            echo "run=be" >> "$GITHUB_OUTPUT"
          else
            echo "run=manual" >> "$GITHUB_OUTPUT"
          fi

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Lint Frontend
        if: contains(github.event.comment.body, '/test_fe') || contains(github.event.comment.body, '/test_all')
        run: |
          cd client/react-client-app
          npm ci
          npm run lint

      - name: Run frontend tests
        if: ${{ steps.determine.outputs.run == 'fe' || steps.determine.outputs.run == 'all' || github.event_name == 'workflow_dispatch' }}
        run: |
          cd client/react-client-app
          npm ci
          npm test

      - name: Lint Backend
        if: contains(github.event.comment.body, '/test_be') || contains(github.event.comment.body, '/test_all')
        run: |
          cd server/node-server-app
          npm ci
          npm run lint

      - name: Run backend tests
        if: ${{ steps.determine.outputs.run == 'be' || steps.determine.outputs.run == 'all' || github.event_name == 'workflow_dispatch' }}
        run: |
          cd server/node-server-app
          npm ci
          npm test

      - name: Comment - Tests Completed
        if: always() && github.event_name == 'issue_comment'
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.MEETONLINE_PAT }}
          script: |
            const { owner, repo } = context.repo;
            const issue_number = context.issue.number;
            const runUrl = `${process.env.GITHUB_SERVER_URL}/${owner}/${repo}/actions/runs/${process.env.GITHUB_RUN_ID}`;
            const conclusion = '${{ job.status }}';
            const emoji = conclusion === 'success' ? '‚úÖ' : '‚ùå';
            const message =
              conclusion === 'success'
                ? `${emoji} All tests completed successfully!`
                : `${emoji} Some tests failed. Please check logs below.`;
            await github.rest.issues.createComment({
              owner,
              repo,
              issue_number,
              body: `${message}\nüîó [View run details](${runUrl})`
            });

